


													DATABASE
USER: 
|---UserId---|---Name---|---SingleScore---|---MutilScore---|---Diamonds---|---GamesWin---|---GamesLose---|
Primary key: UserID
Trigger: 	Complex MutilScore = GameWin*MarkGameWin + GameLose*MarkGameLose =,=!
			MultiScore >= 0 | SingleScore >= 0
			Diamonds >= 0
			KO cai dat trigger

Single result 


QUESTION:
|---QuestionID---|---QuestionContent---|---A---|---B---|---C---|---D---|---Correct---|---SubjectId---|
Primary key: QuestionID
Foreign key: SubjectId - SUBJECT
Correct had to equal one of them ( A, B, C, D )



Xu li song song cac cau lenh sql
SubjectId: Number


SUBJECT:
|---SubjectId---|---SubjectName---|---Active---|---NumberSentence---|---Prefix---|
Primary key: SubjectId



USER-RESULT:
|---UserId---|---QuestionId---|---Win---|---Lose---|
Primary key: UserId - QuestionId
Foreign key: UserId - USER
			 QuestionId - QUESTION
Trigger:	Win + Lose = Time


Daily leaderboard on mem
API load leaderboard pagging


Accept min diamond if having cheat
Accept max score if having cheat
Leaderboard multi: wingame/totalgame && winsentence/totalsentence

















//////////////////////////////////////////////////////////////////////////////////////////////////////////////
GAME-RESULT-LEFT : happen when connection has broken, save result and tell user if has connection.
|---UserId---|---Rival---|---UserScore---|---RivalScore---|
Primary key: UserId - Rival
Foreign key: UserId - USER
			 Rival - USER		 

or
|---UserId---|---R ival---|---UserScore---|---RivalScore---|---MatchId---|
Primary key: UserId - Rival
Foreign key: UserId - USER
			 Rival - USER	
(
	MATCH-DETAIL:
	|---MatchId---|---QuestionId---|---Order---|---Winner(Id)---|
	Primary key: MatchId - QuestionId
	Foreign key: QuestionId - QUESTION
				 Winner - USER
	// Trigger: COUNT( QuestionId ) == Config( QuestionInPackage )
)

